name: Publish to nexus apt
description: "Builds and publish zip package for the xunit"

inputs:
  service_name:
    description: "The name of the service"
    required: true
  environment:
    description: "The environment"
    required: true
  version:
    description: "The version"
    required: true
  base_version:
    description: "The base version"
    required: true
  staging_run_number:
    description: "The run number of the staging version (if exists)"
    required: true
  nexus_apt_debian:
    description: "Nexus APT repo host for release"
    required: true
  nexus_apt_debian_staging:
    description: "Nexus APT repo host for staging"
    required: true
  nexus_apt_debian_pre:
    description: "Nexus APT repo host for prerelease"
    required: true
  nexus_apt_repo_username:
    description: "Nexus APT repo username"
    required: true
  nexus_apt_repo_password:
    description: "Nexus APT repo password"
    required: true
  package_registry_token:
    description: "Package registry token"
    required: true
  is_hotfix:
    description: "Is this a hotfix?"
    required: true
  nuget_github_host:
    description: "The GitHub NuGet host"
    required: true
  nuget_github_username:
    description: "The GitHub NuGet username"
    required: true
  nuget_github_password:
    description: "The GitHub NuGet password"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Add nuget source
      run: >
        dotnet nuget add source ${{ inputs.nuget_github_host }} --name github --username ${{ inputs.nuget_github_username }}
        --password ${{ inputs.nuget_github_password }} --store-password-in-clear-text
      shell: bash

    - name: Publish service
      run: >
        dotnet publish ./src/xunit.csproj --configuration Release --output Publish/opt/hector/xunit
        -r linux-arm --self-contained true /p:AssemblyVersion=${{ inputs.version }} /p:FileVersion=${{ inputs.version }}
      shell: bash

    - name: Create file paths
      run: |
        mkdir -p Publish/etc/systemd/system/
        mkdir Publish/DEBIAN
      shell: bash

    - name: Create systemd unit
      run: |
        cat << EOF > Publish/etc/systemd/system/xunit.service
        [Unit]
        Description=Hector xunit
        After=network-online.target
        Requires=network-online.target

        [Service]
        WorkingDirectory=/opt/hector/xunit
        ExecStart=/opt/hector/xunit/xunit
        TimeoutStopSec=1
        Restart=always
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
        EOF
      shell: bash

    - name: Create postinstall script
      run: |
        cat << EOF > Publish/DEBIAN/postinst
        #!/bin/sh
        systemctl enable xunit.service --now
        EOF
        chmod 755 Publish/DEBIAN/postinst
      shell: bash

    - name: Create preremove script
      run: |
        cat << EOF > Publish/DEBIAN/prerm
        #!/bin/sh
        systemctl disable xunit.service --now
        EOF
        chmod 755 Publish/DEBIAN/prerm
      shell: bash

    - name: Set user and group to root
      run: |
        sudo chown -R root:root Publish
      shell: bash

    - name: Build deb package
      id: package
      uses: jiro4989/build-deb-action@v2
      with:
        package: xunit
        package_root: Publish
        maintainer: "Hectors-Welt GmbH"
        version: ${{ inputs.version }}
        arch: "armhf"
        desc: Hector xunit

    - name: Push release deb package to nexus
      if: startsWith(github.ref, 'refs/tags/v')
      run: >
        curl -u "${{ inputs.nexus_apt_repo_username }}:${{ inputs.nexus_apt_repo_password }}" -H "Content-Type: multipart/form-data"
        --data-binary "@${{steps.package.outputs.file_name}}" "${{ inputs.nexus_apt_debian }}"
      shell: bash

    - name: Push staging deb package to nexus
      if: startsWith(github.ref, 'refs/tags/staging-')
      run: >
        curl -u "${{ inputs.nexus_apt_repo_username }}:${{ inputs.nexus_apt_repo_password }}" -H "Content-Type: multipart/form-data"
        --data-binary "@${{steps.package.outputs.file_name}}" "${{ inputs.nexus_apt_debian_staging}}"
      shell: bash

    - name: Push prerelease deb package to nexus
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: >
        curl -u "${{ inputs.nexus_apt_repo_username }}:${{ inputs.nexus_apt_repo_password }}" -H "Content-Type: multipart/form-data"
        --data-binary "@${{steps.package.outputs.file_name}}" "${{ inputs.nexus_apt_debian_pre}}"
      shell: bash
