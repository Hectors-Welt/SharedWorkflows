name: Create debian package for node 18 

on:
  workflow_call:
    secrets:
      nexusAptRepoUsername: 
        required: true
      nexusAptRepoPassword:
        required: true
      nexusAptRepoHost:
        required: true        
      nexusAptRepoHostPrerelease:
        required: true      

env:
  SERVICE: ${{ github.event.repository.name }}

jobs:
  build_debian_package_and_push_to_nexus:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.x

    - name: Prepare environment variables
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/v/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/v/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        echo TAG_NAME=$(echo ${GITHUB_REF/refs\/tags\/}) >> $GITHUB_ENV

    - name: Prepare environment variables
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        echo TAG_NAME=$(echo ${GITHUB_REF/refs\/tags\/}) >> $GITHUB_ENV

    - name: Build service
      run: |
        sed -i '/serviceVersion/c\"serviceVersion": "${{env.VERSION}}",' ./package.json
        PUPPETEER_SKIP_DOWNLOAD=true npm i
        npm run build
        mkdir -p Publish/opt/hector/${{ env.SERVICE }}/node_modules
        cp -r dist/* Publish/opt/hector/${{ env.SERVICE }}
        mv node_modules/* Publish/opt/hector/${{ env.SERVICE }}/node_modules


    - name: Create unit file path
      run: |
        mkdir -p Publish/etc/systemd/system/
        mkdir Publish/DEBIAN
    
    - name: Build unit file & startup script
      run: |
        startup=Publish/opt/hector/${{ env.SERVICE }}/start.sh
        cat > $startup <<EOF
        #!/bin/bash
        [ -s "/home/services-user/.nvm/nvm.sh" ] && \. "/home/services-user/.nvm/nvm.sh"
        nvm use 18
        node src/main.js
        EOF

        chmod +x $startup
        
        cat << EOF > Publish/etc/systemd/system/${{ env.SERVICE }}.service
        [Unit]
        Description=Hector ${{ env.SERVICE }}
        After=network-online.target
        Requires=network-online.target
        
        [Service]
        EnvironmentFile=/etc/serviceEnvironment
        WorkingDirectory=/opt/hector/${{ env.SERVICE }}
        ExecStart=/opt/hector/${{ env.SERVICE }}/start.sh
        TimeoutStopSec=1
        Restart=always
        RestartSec=5
        
        [Install]
        WantedBy=multi-user.target
        
        EOF

    - name: Create postinstall script
      run: |
        cat << EOF > Publish/DEBIAN/postinst
        #!/bin/sh
        systemctl enable ${{env.SERVICE}}.service --now
        EOF
        chmod 755 Publish/DEBIAN/postinst

    - name: Create preremove script
      run: |
        cat << EOF > Publish/DEBIAN/prerm
        #!/bin/sh
        systemctl disable ${{env.SERVICE}}.service --now
        EOF
        chmod 755 Publish/DEBIAN/prerm

    - name: build-deb-action
      id: package
      uses: jiro4989/build-deb-action@v2
      with:
        package: ${{ env.SERVICE }}
        package_root: ./Publish
        maintainer: "Hectors-Welt GmbH"
        version: ${{ env.VERSION }}
        arch: "amd64"
        desc: Hector ${{ env.SERVICE }}

    - name: push deb package to nexus apt repo
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: |
        curl -u "${{ secrets.nexusAptRepoUsername }}:${{ secrets.nexusAptRepoPassword }}" -H "Content-Type: multipart/form-data" --data-binary "@${{steps.package.outputs.file_name}}" "${{ secrets.nexusAptRepoHostPrerelease }}"
    
    - name: push deb package to nexus apt repo
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        curl -u "${{ secrets.nexusAptRepoUsername }}:${{ secrets.nexusAptRepoPassword }}" -H "Content-Type: multipart/form-data" --data-binary "@${{steps.package.outputs.file_name}}" "${{ secrets.nexusAptRepoHost }}"
