name: Create v6 prerelease

on:
  workflow_call:
    secrets:
      dockerRepo:
        required: true
      packageRepoHost: 
        required: true
      packageRepoPassword:
        required: true
      packageRepoUsername:
        required: true
      packageRepoPort:
        required: true
      nexusDockerUsername:
        required: true
      nexusDockerPassword:
        required: true
      nexusAptRepoUsername:
        required: true
      nexusAptRepoPassword:
        required: true
      nexusAptRepoHost:
        required: true
      chocoRepo:
        required: true
      chocoApiKey:
        required: true
      hangfireFeedUrl:
        required: true  
      hangfireUsername:
        required: true
      hangfirePassword:
        required: true
      
      
env:
  REGISTRY: ${{ secrets.dockerRepo }}
  SERVICE: ${{ github.event.repository.name }} 
        
jobs:
  build_and_publish_zip:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src

    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100

    - name: Prepare environment variables
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        echo RUN_NUMBER=$(echo $GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        echo TAG_NAME=$(echo ${GITHUB_REF/refs\/tags\/}) >> $GITHUB_ENV
        echo NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}') >> $GITHUB_ENV
        
    - name: add private feed
      run: |
        dotnet nuget add source ${{ secrets.hangfireFeedUrl }} --name hangfirePro --username ${{ secrets.hangfireUsername }} --password ${{ secrets.hangfirePassword }} --store-password-in-clear-text
        dotnet restore
                
    - name: Build
      run: 'dotnet publish ${{env.NAME}}.csproj --configuration Release --output Publish -r win-x64 --self-contained true /p:AssemblyVersion=${{ env.VERSION }} /p:FileVersion=${{ env.VERSION }}'

    - name: Test
      id: test
      run: 'dotnet test --no-restore --verbosity'
    
    - name: Print test results
      run: echo ${{ steps.test.outputs }}
