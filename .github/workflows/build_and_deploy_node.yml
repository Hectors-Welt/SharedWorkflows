name: build and deploy node

on:
  workflow_call:
    secrets:
      hangfireFeedUrl:
        required: true  
      hangfireUsername:
        required: true
      hangfirePassword:
        required: true
      nexusAptRepoUsername:
        required: true
      nexusAptRepoPassword:
        required: true
      nexusAptRepoHost:
        required: true 
      nexusAptRepoPrereleaseHost:
        required: true  
      nexusAptRepoStagingHost: 
        required: true
      nexusDockerUsername:
        required: true  
      nexusDockerPassword:
        required: true 
      nugetGithubHost:
        required: true
      nugetGithubUsername:
        required: true
      nugetGithubPassword:
        required: true
      packageRepoHost: 
        required: true
      packageRepoPassword:
        required: true
      packageRepoUsername:
        required: true
      packageRepoPort:
        required: true
      dockerRepo:
        required: true 
      stagingRunNumber:
        required: true
      shouldBuildDocker:
        required: false
      shouldBuildDebian:
        required: false
      shouldBuildZip:
        required: false

jobs:     
  get_version: 
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.node-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Get Node.js version
        id: node-version
        run: echo "::set-output name=version::$(jq -r '.devDependencies["@types/node"]'  package.json | cut -d '.' -f 1 | tr -d '[:space:]')"
  
  set_build_docker_env:
    runs-on: ubuntu-latest
    outputs:
      should_build_debian: ${{ steps.set-env.outputs.should_build_debian }}
      should_build_zip: ${{ steps.set-env.outputs.should_build_zip }}
    steps:
    - name: Set shouldBuild environment variable
      id: set-env
      run: |
        if [ -n "${{ secrets.shouldBuildDebian }}" ]; then
          echo "should_build_debian=true" >> $GITHUB_ENV
          echo "::set-output name=should_build_debian::true"
        else
          echo "should_build_debian=false" >> $GITHUB_ENV
          echo "::set-output name=should_build_debian::false"
        fi    
        if [ -n "${{ secrets.shouldBuildZip }}" ]; then
          echo "should_build_zip=true" >> $GITHUB_ENV
          echo "::set-output name=should_build_zip::true"
        else
          echo "should_build_zip=false" >> $GITHUB_ENV
          echo "::set-output name=should_build_zip::false"
        fi  
        
  build_debian_package:
      needs: [get_version, set_build_docker_env]
      if: ${{ needs.set_build_docker_env.outputs.should_build_debian != '' }}
      uses: Hectors-Welt/SharedWorkflows/.github/workflows/node_18_build_debian_package.yml@main
      secrets:
        nexusAptRepoUsername: ${{ secrets.nexusAptRepoUsername }}
        nexusAptRepoPassword: ${{ secrets.nexusAptRepoPassword }}
        nexusAptRepoHost: ${{ secrets.nexusAptRepoHost }}
        nexusAptRepoPrereleaseHost: ${{ secrets.nexusAptRepoPrereleaseHost }} 
        nexusAptRepoStagingHost: ${{ secrets.nexusAptRepoStagingHost }}
        nodeVersion:  ${{ needs.get_version.outputs.version }}
        stagingRunNumber: ${{ secrets.stagingRunNumber }}
              
  build_zip_package:
    needs: [get_version, set_build_docker_env]
    if: ${{ needs.set_build_docker_env.outputs.should_build_zip != '' }}
    uses: Hectors-Welt/SharedWorkflows/.github/workflows/node_latest_build_and_publish_zip.yml@main
    secrets:
      packageRepoHost: ${{ secrets.packageRepoHost }}
      packageRepoPassword: ${{ secrets.packageRepoPassword }}
      packageRepoUsername: ${{ secrets.packageRepoUsername }}
      packageRepoPort: ${{ secrets.packageRepoPort }}
      nodeVersion:  ${{ needs.get_version.outputs.version }}
      nexusAptRepoUsername: ${{ secrets.nexusAptRepoUsername }}
      nexusAptRepoPassword: ${{ secrets.nexusAptRepoPassword }}
      stagingRunNumber: ${{ secrets.stagingRunNumber }} 

