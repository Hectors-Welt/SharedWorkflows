name: build and publish zip

on:
  workflow_call:
    secrets:
      packageRepoHost: 
        required: true
      packageRepoPassword:
        required: true
      packageRepoUsername:
        required: true
      packageRepoPort:
        required: true
      nexusAptRepoUsername:
        required: true
      nexusAptRepoPassword:
        required: true
      nodeVersion:
        required: true
      stagingRunNumber:
        required: true
      isHotfix:
        required: false
env:
  SERVICE: ${{ github.event.repository.name }}
  
jobs:     
  build_zip:
    runs-on: windows-latest
    env:
      NODE_VERSION: ${{ secrets.nodeVersion }}    
    
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Setup Node.js
      if: ${{ env.NODE_VERSION != null && env.NODE_VERSION != '' }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ secrets.nodeVersion }}.x
        
    - name: Setup Node.js
      if: ${{ env.NODE_VERSION == null || env.NODE_VERSION == '' }}
      uses: actions/setup-node@v2
      with:
        node-version: 18.x
        
    - name: Set isHotfix environment variable
      run: echo "IS_HOTFIX=${{ secrets.isHotfix }}" >> $GITHUB_ENV

    - name: Prepare local environment variables
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        chcp 65001 #set code page to utf-8
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/v/}) >> $env:GITHUB_ENV
        echo VERSION=$($env:GITHUB_REF -replace "refs/tags/v")  >> $env:GITHUB_ENV
  
    - name: Prepare local environment variables
      if: startsWith(github.ref, 'refs/tags/staging-')
      run: |
        chcp 65001 #set code page to utf-8
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/staging-/}) >> $env:GITHUB_ENV
        echo VERSION=$($env:GITHUB_REF -replace "refs/tags/staging-")  >> $env:GITHUB_ENV
        
    - name: Prepare local environment variables
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: |
        chcp 65001 #set code page to utf-8
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}) >> $env:GITHUB_ENV
        echo VERSION=$($env:GITHUB_REF -replace "refs/tags/prerelease-")  >> $env:GITHUB_ENV
    
    - name: Prepare global environment variables
      run: |
        chcp 65001 #set code page to utf-8
        echo RUN_NUMBER=$(echo ${{github.run_number}}) >> $env:GITHUB_ENV
        echo TAG_NAME=$(echo ${{github.ref_name}}) >> $env:GITHUB_ENV
        
    
    - name: If no 'v' tag, build service
      if: ${{(!startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/v') || (startsWith(github.ref, 'refs/tags/v') && env.IS_HOTFIX == 'true'))}} 
      run: |
        sed -i '/serviceName/c\"serviceName": "${{env.SERVICE}}",' ./package.json
        sed -i '/serviceVersion/c\"serviceVersion": "${{env.VERSION}}.${{ env.RUN_NUMBER }}",' ./package.json
        npm install
        npm run build
        npm run package
        
    - name: If no 'v' tag, zip build results
      if: ${{(!startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/v') || (startsWith(github.ref, 'refs/tags/v') && env.IS_HOTFIX == 'true'))}} 
      working-directory: ./build
      run: Compress-Archive -Path ./*  -DestinationPath ./${{env.SERVICE}}-${{env.VERSION}}.${{env.RUN_NUMBER}}.zip
   
    - name: If no 'v' tag, upload zip
      if: ${{(!startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/v') || (startsWith(github.ref, 'refs/tags/v') && env.IS_HOTFIX == 'true'))}} 
      uses: actions/upload-artifact@v3
      with:
        name: project-zip
        path: build/${{env.SERVICE}}-${{env.VERSION}}.${{env.RUN_NUMBER}}.zip
        retention-days: 1
          
  publish_zip:
    needs: build_zip
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
      with: 
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ secrets.nodeVersion }}.x
        
    - name: Prepare local environment variables
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/v/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/v/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
  
    - name: Prepare local environment variables
      if: startsWith(github.ref, 'refs/tags/staging-')
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/staging-/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/staging-/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        
    - name: Prepare local environment variables
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        
    - name: If no 'v' tag, Download a single artifact
      if: ${{(!startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/v') || (startsWith(github.ref, 'refs/tags/v') && env.IS_HOTFIX == 'true'))}}
      uses: actions/download-artifact@v3
      with:
        name: project-zip
            
    - name: If 'v' tag, get zip
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
         curl -u "${{ secrets.packageRepoUsername }}:${{ secrets.packageRepoPassword }}" ${{ secrets.packageRepoHost }}/staging/${{env.SERVICE}}/${{env.SERVICE}}-${{ env.BASE_VERSION }}.${{secrets.stagingRunNumber}}.zip --output ${{env.SERVICE}}-${{ env.BASE_VERSION }}.${{secrets.stagingRunNumber}}.zip

    - name: Publish zip to nexus prerelease repo
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run:  curl -u "${{ secrets.nexusAptRepoUsername }}:${{ secrets.nexusAptRepoPassword }}" --upload-file ${{ env.SERVICE}}-${{ env.VERSION }}.zip https://nexus.hectorts.de/repository/windows-pre/${{ env.SERVICE}}-${{ env.VERSION }}.zip

    - name: Publish zip to nexus release repo
      if: startsWith(github.ref, 'refs/tags/v')
      run:  curl -u "${{ secrets.nexusAptRepoUsername }}:${{ secrets.nexusAptRepoPassword }}" --upload-file ${{ env.SERVICE}}-${{ env.BASE_VERSION }}.${{secrets.stagingRunNumber}}.zip https://nexus.hectorts.de/repository/windows/${{ env.NAME}}-${{ env.BASE_VERSION }}.${{secrets.stagingRunNumber}}.zip

    - name: Publish zip to nexus staging repo
      if: startsWith(github.ref, 'refs/tags/staging-')
      run:  curl -u "${{ secrets.nexusAptRepoUsername }}:${{ secrets.nexusAptRepoPassword }}" --upload-file ${{ env.SERVICE}}-${{ env.VERSION }}.zip https://nexus.hectorts.de/repository/windows-stg/${{ env.SERVICE}}-${{ env.VERSION }}.zip

    - name: copy file via ssh password
      if: startsWith(github.ref, 'refs/tags/staging-')
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.packageRepoHost }}
        username: ${{ secrets.packageRepoUsername }}
        password: ${{ secrets.packageRepoPassword }}
        port: ${{ secrets.packageRepoPort }}
        source: ${{ env.SERVICE }}-${{ env.VERSION }}.zip
        target: staging/${{ env.SERVICE }}
        timeout: 300s
        command_timeout: 30m

    - name: copy file via ssh password
      if: ${{startsWith(github.ref, 'refs/tags/v') && env.IS_HOTFIX == 'false'}}
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.packageRepoHost }}
        username: ${{ secrets.packageRepoUsername }}
        password: ${{ secrets.packageRepoPassword }}
        port: ${{ secrets.packageRepoPort }}
        source: ./${{ env.SERVICE}}-${{ env.BASE_VERSION }}.${{secrets.stagingRunNumber}}.zip
        target: release/${{ env.SERVICE }}
        timeout: 300s
        command_timeout: 30m

    - name: copy file via ssh password
      if: ${{startsWith(github.ref, 'refs/tags/v') && env.IS_HOTFIX == 'true'}}
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.packageRepoHost }}
        username: ${{ secrets.packageRepoUsername }}
        password: ${{ secrets.packageRepoPassword }}
        port: ${{ secrets.packageRepoPort }}
        source: ./${{ env.SERVICE }}-${{ env.VERSION }}.zip
        target: release/${{ env.SERVICE }}
        timeout: 300s
        command_timeout: 30m
          
    - name: copy file via ssh password
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.packageRepoHost }}
        username: ${{ secrets.packageRepoUsername }}
        password: ${{ secrets.PackageRepoPassword }}
        port: ${{ secrets.packageRepoPort}}
        source: ${{ env.SERVICE }}-${{ env.VERSION }}.zip
        target: prerelease/${{ env.SERVICE }}
        timeout: 300s
        command_timeout: 30m
