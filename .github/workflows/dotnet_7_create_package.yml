name: Create v6 dotnet package

on:
  workflow_call:
    secrets:
      nugetGithubHost:
        required: true
      nugetGithubUsername:
        required: true
      nugetGithubPassword:
        required: true
      nugetGithubToken:
        required: true
      hangfireFeedUrl:
        required: true  
      hangfireUsername:
        required: true
      hangfirePassword:
        required: true  
        
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src

    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x

    - name: Get the tag  name
      id: get_tag_name
      run: echo "TAG_NAME=${GITHUB_REF/refs\/tags\/}" >> $GITHUB_OUTPUT

    - name: Get the release version
      id: get_base_version
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo "BASE_VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT  
      
    - name: Get the prerelease version 
      id: get_base_prerelease_version
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: echo "BASE_VERSION=${GITHUB_REF/refs\/tags\/prerelease-/}" >> $GITHUB_OUTPUT 

    - name: Get the version
      id: get_version
      if: startsWith(github.ref, 'refs/tags/v')
      run:  echo "VERSION=${{ steps.get_base_version.outputs.BASE_VERSION }}.$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT   
    
    - name: Get the prerelease version
      id: get_prerelease_version
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: echo "VERSION=${{ steps.get_base_prerelease_version.outputs.BASE_VERSION }}.$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT  

    - name: Get the repo name
      id: get_repo_name
      run: echo "NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')" >> $GITHUB_OUTPUT

    - name: Add feeds
      run: |
        dotnet nuget add source ${{ secrets.nugetGithubHost }} --name github --username ${{ secrets.nugetGithubUsername }} --password ${{ secrets.nugetGithubPassword }} --store-password-in-clear-text
        dotnet nuget add source ${{ secrets.hangfireFeedUrl }} --name hangfirePro --username ${{ secrets.hangfireUsername }} --password ${{ secrets.hangfirePassword }} --store-password-in-clear-text
        dotnet restore
        
    - name: Create release NuGet Package
      if: startsWith(github.ref, 'refs/tags/v')
      run: 'dotnet pack -c Release /p:Version=${{ steps.get_version.outputs.VERSION }}'
      
    - name: Create prerelease NuGet Package
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: 'dotnet pack -c Release /p:Version=${{ steps.get_prerelease_version.outputs.VERSION }}-prerelease'
      
    - name: Publish Nuget Package
      run: dotnet nuget push ./bin/Release/*.snupkg -s ${{ secrets.nugetGithubHost }} -k ${{ secrets.nugetGithubToken }} --skip-duplicate --no-symbols true
