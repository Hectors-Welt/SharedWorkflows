
name: build and deploy dotnet

on:
  workflow_call:
    secrets:
      hangfireFeedUrl:
        required: true  
      hangfireUsername:
        required: true
      hangfirePassword:
        required: true
      nexusAptRepoUsername:
        required: true
      nexusAptRepoPassword:
        required: true
      nexusAptRepoHost:
        required: true 
      nexusDockerUsername:
        required: true  
      nexusDockerPassword:
        required: true 
      nexusAptRepoPrereleaseHost:
        required: true    
      nexusAptRepoStagingHost:
        required: true
      nugetGithubHost:
        required: true
      nugetGithubUsername:
        required: true
      nugetGithubPassword:
        required: true
      packageRepoHost: 
        required: true
      packageRepoPassword:
        required: true
      packageRepoUsername:
        required: true
      packageRepoPort:
        required: true
      dockerRepo:
        required: true 
      stagingRunNumber:
        required: true
      shouldSkipDocker:
        required: false
      shouldSkipDebian:
        required: false
      shouldSkipZip:
        required: false

jobs:
  get_version: 
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.dotnet-version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check for prerelease packages
      if: ${{!startsWith(github.ref, 'refs/tags/prerelease-')}}
      run: |
        if grep -q "<PackageReference .* Version=\".*-prerelease\"" *.csproj; then
          echo "Solution is containing prerelease packages, abort!"
          exit 1
        fi

    - name: Get .NET version
      working-directory: src
      id: dotnet-version
      run: |
         echo "::set-output name=version::$(sed -n 's|<TargetFramework>\(.*\)</TargetFramework>|\1|p' *.csproj | sed 's/net//' | cut -d '.' -f 1 | tr -d '[:space:]')"
         echo $(sed -n 's|<TargetFramework>\(.*\)</TargetFramework>|\1|p' *.csproj | sed 's/net//' | cut -d '.' -f 1 | tr -d '[:space:]')---

  set_skip_docker_env:
    runs-on: ubuntu-latest
    outputs:
      should_skip_docker: ${{ steps.set-env.outputs.should_skip_docker }}
      should_skip_debian: ${{ steps.set-env.outputs.should_skip_debian }}
      should_skip_zip: ${{ steps.set-env.outputs.should_skip_zip }}
    steps:
    - name: Set shouldskip environment variable
      id: set-env
      run: |
        if [ -n "${{ secrets.shouldSkipDocker }}" ]; then
          echo "should_skip_docker=true" >> $GITHUB_ENV
          echo "::set-output name=should_skip_docker::true"
        else
          echo "should_skip_docker=false" >> $GITHUB_ENV
          echo "::set-output name=should_skip_docker::false"
        fi
        if [ -n "${{ secrets.shouldSkipDebian }}" ]; then
          echo "should_skip_debian=true" >> $GITHUB_ENV
          echo "::set-output name=should_skip_debian::true"
        else
          echo "should_skip_debian=false" >> $GITHUB_ENV
          echo "::set-output name=should_skip_debian::false"
        fi    
        if [ -n "${{ secrets.shouldSkipZip }}" ]; then
          echo "should_skip_zip=true" >> $GITHUB_ENV
          echo "::set-output name=should_skip_zip::true"
        else
          echo "should_skip_zip=false" >> $GITHUB_ENV
          echo "::set-output name=should_skip_zip::false"
        fi  
 
#  run_tests:
#    needs: [get_version]
#    uses: Hectors-Welt/SharedWorkflows/.github/workflows/dotnet_6_test.yml@main
#    secrets:
#      packageRepoHost: ${{ secrets.packageRepoHost }}
#      packageRepoPassword: ${{ secrets.packageRepoPassword }}
#      packageRepoUsername: ${{ secrets.packageRepoUsername }}
#      packageRepoPort: ${{ secrets.packageRepoPort }}
#      hangfireFeedUrl: ${{ secrets.hangfireFeedUrl }}
#      hangfireUsername: ${{ secrets.hangfireUsername }}
#      hangfirePassword: ${{ secrets.hangfirePassword }}
#      nugetGithubHost: ${{ secrets.nugetGithubHost }}
#      nugetGithubUsername: ${{ secrets.nugetGithubUsername }}
#      nugetGithubPassword: ${{ secrets.nugetGithubPassword }}
#      dotnetVersion: ${{ needs.get_version.outputs.version }}
      
  build_and_publish_docker:
    if: ${{ success() && !startsWith(github.ref, 'refs/tags/staging-') && needs.set_skip_docker_env.outputs.should_skip_docker != '' }} 
    needs: [get_version, set_skip_docker_env]
    uses: Hectors-Welt/SharedWorkflows/.github/workflows/dotnet_6_build_and_publish_docker_image.yml@main
    secrets:
      hangfireFeedUrl: ${{ secrets.hangfireFeedUrl }}
      hangfireUsername: ${{ secrets.hangfireUsername }}
      hangfirePassword: ${{ secrets.hangfirePassword }}
      nugetGithubHost: ${{ secrets.nugetGithubHost }}
      nugetGithubUsername: ${{ secrets.nugetGithubUsername }}
      nugetGithubPassword: ${{ secrets.nugetGithubPassword }}
      dockerRepo: ${{ secrets.dockerRepo }}
      nexusDockerUsername: ${{ secrets.nexusDockerUsername }}
      nexusDockerPassword: ${{ secrets.nexusDockerPassword }}
      dotnetVersion: ${{ needs.get_version.outputs.version }}
  
  build_and_publish_deb:
    needs: [get_version, set_skip_docker_env]
    if: ${{ success() && needs.set_skip_docker_env.outputs.should_skip_debian != '' }}
    uses: Hectors-Welt/SharedWorkflows/.github/workflows/dotnet_6_build_and_publish_debian_package.yml@main
    secrets:
      nexusAptRepoUsername: ${{ secrets.nexusAptRepoUsername }}
      nexusAptRepoPassword: ${{ secrets.nexusAptRepoPassword }}
      nexusAptRepoPrereleaseHost: ${{ secrets.nexusAptRepoPrereleaseHost }}
      nexusAptRepoStagingHost: ${{ secrets.nexusAptRepoStagingHost }}
      nexusAptRepoHost: ${{ secrets.nexusAptRepoHost}}
      hangfireFeedUrl: ${{ secrets.hangfireFeedUrl }}
      hangfireUsername: ${{ secrets.hangfireUsername }}
      hangfirePassword: ${{ secrets.hangfirePassword }}
      nugetGithubHost: ${{ secrets.nugetGithubHost }}
      nugetGithubUsername: ${{ secrets.nugetGithubUsername }}
      nugetGithubPassword: ${{ secrets.nugetGithubPassword }}
      dotnetVersion: ${{ needs.get_version.outputs.version }}
      stagingRunNumber: ${{ secrets.stagingRunNumber }}

  build_and_publish_zip:
    needs: [get_version, set_skip_docker_env]
    if: ${{ success() && needs.set_skip_docker_env.outputs.should_skip_zip != '' }}
    uses: Hectors-Welt/SharedWorkflows/.github/workflows/dotnet_6_build_and_publish_zip_package.yml@main
    secrets:
      packageRepoHost: ${{ secrets.packageRepoHost }}
      packageRepoPassword: ${{ secrets.packageRepoPassword }}
      packageRepoUsername: ${{ secrets.packageRepoUsername }}
      packageRepoPort: ${{ secrets.packageRepoPort }}
      hangfireFeedUrl: ${{ secrets.hangfireFeedUrl }}
      hangfireUsername: ${{ secrets.hangfireUsername }}
      hangfirePassword: ${{ secrets.hangfirePassword }}
      nugetGithubHost: ${{ secrets.nugetGithubHost }}
      nugetGithubUsername: ${{ secrets.nugetGithubUsername }}
      nugetGithubPassword: ${{ secrets.nugetGithubPassword }}
      dotnetVersion: ${{ needs.get_version.outputs.version }}
      stagingRunNumber: ${{ secrets.stagingRunNumber }}
 
