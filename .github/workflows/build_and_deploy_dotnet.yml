
name: build and deploy dotnet

on:
  workflow_call:
    secrets:
      hangfireFeedUrl:
        required: true  
      hangfireUsername:
        required: true
      hangfirePassword:
        required: true
      nexusAptRepoUsername:
        required: true
      nexusAptRepoPassword:
        required: true
      nexusAptRepoHost:
        required: true 
      nexusDockerUsername:
        required: true  
      nexusDockerPassword:
        required: true 
      nexusAptRepoPrereleaseHost:
        required: true    
      nexusAptRepoStagingHost:
        required: true
      nugetGithubHost:
        required: true
      nugetGithubUsername:
        required: true
      nugetGithubPassword:
        required: true
      packageRepoHost: 
        required: true
      packageRepoPassword:
        required: true
      packageRepoUsername:
        required: true
      packageRepoPort:
        required: true
      dockerRepo:
        required: true 
      
jobs:
  get_version: 
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.dotnet-version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check for prerelease packages
      if: ${{!startsWith(github.ref, 'refs/tags/prerelease-')}}
      run: |
        if grep -q "<PackageReference .* Version=\".*-prerelease\"" *.csproj; then
          echo "Solution is containing prerelease packages, abort!"
          exit 1
        fi

    - name: Get .NET version
      working-directory: src
      id: dotnet-version
      run: |
         echo "::set-output name=version::$(sed -n 's|<TargetFramework>\(.*\)</TargetFramework>|\1|p' *.csproj | sed 's/net//' | cut -d '.' -f 1 | tr -d '[:space:]')"
         echo $(sed -n 's|<TargetFramework>\(.*\)</TargetFramework>|\1|p' *.csproj | sed 's/net//' | cut -d '.' -f 1 | tr -d '[:space:]')---

  run_tests:
    needs: [get_version]
    uses: Hectors-Welt/SharedWorkflows/.github/workflows/dotnet_6_test.yml@main
    secrets:
      packageRepoHost: ${{ secrets.packageRepoHost }}
      packageRepoPassword: ${{ secrets.packageRepoPassword }}
      packageRepoUsername: ${{ secrets.packageRepoUsername }}
      packageRepoPort: ${{ secrets.packageRepoPort }}
      hangfireFeedUrl: ${{ secrets.hangfireFeedUrl }}
      hangfireUsername: ${{ secrets.hangfireUsername }}
      hangfirePassword: ${{ secrets.hangfirePassword }}
      nugetGithubHost: ${{ secrets.nugetGithubHost }}
      nugetGithubUsername: ${{ secrets.nugetGithubUsername }}
      nugetGithubPassword: ${{ secrets.nugetGithubPassword }}
      dotnetVersion: ${{ needs.get_version.outputs.version }}
      
  build_and_publish_docker:
    if: ${{ success() && !startsWith(github.ref, 'refs/tags/staging-') && needs.check_if_commit_is_valid.result == 'success' }} 
    needs: [get_version, run_tests]
    uses: Hectors-Welt/SharedWorkflows/.github/workflows/dotnet_6_build_and_publish_docker_image.yml@main
    secrets:
      hangfireFeedUrl: ${{ secrets.hangfireFeedUrl }}
      hangfireUsername: ${{ secrets.hangfireUsername }}
      hangfirePassword: ${{ secrets.hangfirePassword }}
      nugetGithubHost: ${{ secrets.nugetGithubHost }}
      nugetGithubUsername: ${{ secrets.nugetGithubUsername }}
      nugetGithubPassword: ${{ secrets.nugetGithubPassword }}
      dockerRepo: ${{ secrets.dockerRepo }}
      nexusDockerUsername: ${{ secrets.nexusDockerUsername }}
      nexusDockerPassword: ${{ secrets.nexusDockerPassword }}
      dotnetVersion: ${{ needs.get_version.outputs.version }}
  
  build_and_publish_deb:
    needs: [get_version, run_tests]
    if: ${{ success() }}
    uses: Hectors-Welt/SharedWorkflows/.github/workflows/dotnet_6_build_and_publish_debian_package.yml@main
    secrets:
      nexusAptRepoUsername: ${{ secrets.nexusAptRepoUsername }}
      nexusAptRepoPassword: ${{ secrets.nexusAptRepoPassword }}
      nexusAptRepoPrereleaseHost: ${{ secrets.nexusAptRepoPrereleaseHost }}
      nexusAptRepoStagingHost: ${{ secrets.nexusAptRepoStagingHost }}
      nexusAptRepoHost: ${{ secrets.nexusAptRepoHost}}
      hangfireFeedUrl: ${{ secrets.hangfireFeedUrl }}
      hangfireUsername: ${{ secrets.hangfireUsername }}
      hangfirePassword: ${{ secrets.hangfirePassword }}
      nugetGithubHost: ${{ secrets.nugetGithubHost }}
      nugetGithubUsername: ${{ secrets.nugetGithubUsername }}
      nugetGithubPassword: ${{ secrets.nugetGithubPassword }}
      dotnetVersion: ${{ needs.get_version.outputs.version }}

  build_and_publish_zip:
    needs: [get_version, run_tests]
    if: ${{ success() }}
    uses: Hectors-Welt/SharedWorkflows/.github/workflows/dotnet_6_build_and_publish_zip_package.yml@main
    secrets:
      packageRepoHost: ${{ secrets.packageRepoHost }}
      packageRepoPassword: ${{ secrets.packageRepoPassword }}
      packageRepoUsername: ${{ secrets.packageRepoUsername }}
      packageRepoPort: ${{ secrets.packageRepoPort }}
      hangfireFeedUrl: ${{ secrets.hangfireFeedUrl }}
      hangfireUsername: ${{ secrets.hangfireUsername }}
      hangfirePassword: ${{ secrets.hangfirePassword }}
      nugetGithubHost: ${{ secrets.nugetGithubHost }}
      nugetGithubUsername: ${{ secrets.nugetGithubUsername }}
      nugetGithubPassword: ${{ secrets.nugetGithubPassword }}
      dotnetVersion: ${{ needs.get_version.outputs.version }}
 
