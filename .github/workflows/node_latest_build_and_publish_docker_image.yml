name: Create docker image for node latest

on:
  workflow_call:
    secrets:
      dockerRepo:
        required: true
      nexusDockerUsername:
        required: true      
      nexusDockerPassword:
        required: true
      packageRegistryToken:
        required: true
      nodeVersion:
        required: true
 
env:
  SERVICE: ${{ github.event.repository.name }}
  REGISTRY: ${{ secrets.dockerRepo }}

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:   
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.nexusDockerUsername }}
        password: ${{ secrets.nexusDockerPassword }}

    - name: Prepare environment variables for release
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/v/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/v/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        echo TAG_NAME=$(echo ${GITHUB_REF/refs\/tags\/}) >> $GITHUB_ENV

    - name: Prepare environment variables for prerelease
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/prerelease-/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        echo TAG_NAME=$(echo ${GITHUB_REF/refs\/tags\/}) >> $GITHUB_ENV

    - name: Prepare environment variables for staging
      if: startsWith(github.ref, 'refs/tags/staging-')
      run: |
        echo BASE_VERSION=$(echo ${GITHUB_REF/refs\/tags\/staging-/}) >> $GITHUB_ENV
        echo VERSION=$(echo ${GITHUB_REF/refs\/tags\/staging-/}.$GITHUB_RUN_NUMBER) >> $GITHUB_ENV
        echo TAG_NAME=$(echo ${GITHUB_REF/refs\/tags\/}) >> $GITHUB_ENV

    - name: set version in package.json
      if: ${{!startsWith(github.ref, 'refs/tags/v')}}
      run: |
        sed -i '/serviceVersion/c\"serviceVersion": "${{env.VERSION}}",' ./package.json

    - name: create docker file
      if: ${{!startsWith(github.ref, 'refs/tags/v')}}
      run: | 
        cat <<EOF >Dockerfile
        FROM node:lts-alpine As development
        
        ENV NODE_ENV=production
        WORKDIR /usr/src/app
        
        COPY package*.json ./
        
        RUN echo //npm.pkg.github.com/:_authToken=${{ secrets.packageRegistryToken }} >> ~/.npmrc
        RUN echo @hectors-welt:registry=https://npm.pkg.github.com >> ~/.npmrc
        RUN PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci -omit=production --legacy-peer-deps 
                
        RUN echo > ~/.npmrc
        
        ADD . /usr/src/app
        
        COPY . .
        RUN npm run build
        
        FROM node:lts-alpine as production
        
        ENV NODE_ENV=production
        WORKDIR /usr/src/app
        COPY package*.json ./
        RUN echo //npm.pkg.github.com/:_authToken=${{ secrets.packageRegistryToken }} >> ~/.npmrc
        RUN echo @hectors-welt:registry=https://npm.pkg.github.com >> ~/.npmrc
        RUN PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci -omit=production --legacy-peer-deps 
        COPY . .
        COPY --from=development /usr/src/app/dist ./dist
        
        CMD ["node", "dist/src/main"]
        
        EOF

    - name: Extract metadata (tags, labels) for Docker
      if: ${{!startsWith(github.ref, 'refs/tags/v')}}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.SERVICE }}
        flavor: |
          latest=false
        tags: |
          type=ref,event=tag

    - name: Get servicename to lowercase
      if: ${{!startsWith(github.ref, 'refs/tags/v')}}
      id: toLowerCase
      run: |
        INPUT=${{ env.SERVICE }}
        echo "lowerCaseValue=${INPUT,,}" >> $GITHUB_OUTPUT  

    - name: Pull Docker image from Nexus
      if: startsWith(github.ref, 'refs/tags/v')
      run: docker pull ${{env.SERVICE}}:staging

    - name: Tag Docker image with new tag
      if: startsWith(github.ref, 'refs/tags/v')
      run: docker tag ${{env.SERVICE}}:staging ${{env.SERVICE}}:release

    - name: Push Docker image to Docker Hub
      if: startsWith(github.ref, 'refs/tags/v')
      run: docker push ${{env.SERVICE}}:release
        
    - name: Build and push Docker image
      if: startsWith(github.ref, 'refs/tags/staging-')
      uses: docker/build-push-action@v5
      with:
        context: .
        build-args: |
          SERVICE=${{ env.SERVICE }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}, ${{ secrets.dockerRepo }}/${{steps.toLowerCase.outputs.lowerCaseValue}}:staging
        labels: ${{ steps.meta.outputs.labels }}
        file: ./Dockerfile  

    - name: Build and push Docker image
      if: startsWith(github.ref, 'refs/tags/prerelease-')
      uses: docker/build-push-action@v5
      with:
        context: .
        build-args: |
          SERVICE=${{ env.SERVICE }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}, ${{ secrets.dockerRepo }}/${{steps.toLowerCase.outputs.lowerCaseValue}}:prerelease
        labels: ${{ steps.meta.outputs.labels }}
        file: ./Dockerfile    
